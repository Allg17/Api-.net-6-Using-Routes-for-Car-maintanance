// <auto-generated />
using System;
using CarMaintanance.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarMaintanance.Migrations
{
    [DbContext(typeof(CarDbContext))]
    [Migration("20221231165811_CuartaMigration")]
    partial class CuartaMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarMaintanance.Model.Areas", b =>
                {
                    b.Property<int>("AreaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AreaID"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<int>("PerfilID")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("AreaID");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("CarMaintanance.Model.AreasDetalle", b =>
                {
                    b.Property<int>("AreaDetalleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AreaDetalleID"));

                    b.Property<int>("AreaID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("SolicitudID")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("AreaDetalleID");

                    b.HasIndex("AreaID");

                    b.HasIndex("SolicitudID");

                    b.ToTable("AreasD");
                });

            modelBuilder.Entity("CarMaintanance.Model.Clientes", b =>
                {
                    b.Property<int>("ClienteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteID"));

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("FechaCreado")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("ClienteID");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("CarMaintanance.Model.Facturas", b =>
                {
                    b.Property<int>("FacturasID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FacturasID"));

                    b.Property<int>("ClienteID")
                        .HasColumnType("int");

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<bool>("Completada")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("SolicitudID")
                        .HasColumnType("int");

                    b.Property<float>("Total")
                        .HasColumnType("real");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("FacturasID");

                    b.HasIndex("ClienteID");

                    b.HasIndex("SolicitudID")
                        .IsUnique();

                    b.ToTable("Facturas");
                });

            modelBuilder.Entity("CarMaintanance.Model.Modulos", b =>
                {
                    b.Property<int>("ModuloId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModuloId"));

                    b.Property<bool>("Crear_Editar")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<bool>("Eliminar")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<int>("PerfilID")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.Property<bool>("Ver")
                        .HasColumnType("bit");

                    b.HasKey("ModuloId");

                    b.HasIndex("PerfilID");

                    b.ToTable("Modulos");
                });

            modelBuilder.Entity("CarMaintanance.Model.Perfiles", b =>
                {
                    b.Property<int>("PerfilID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PerfilID"));

                    b.Property<int>("AreaID")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("PerfilID");

                    b.HasIndex("AreaID")
                        .IsUnique();

                    b.ToTable("Perfiles");
                });

            modelBuilder.Entity("CarMaintanance.Model.PerfilesRoles", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("PerfilID")
                        .HasColumnType("int");

                    b.Property<int>("RolID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PerfilID");

                    b.HasIndex("RolID");

                    b.ToTable("PerfilesRoles");
                });

            modelBuilder.Entity("CarMaintanance.Model.Recordatorios", b =>
                {
                    b.Property<int>("RecordatorioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecordatorioID"));

                    b.Property<int>("ClienteID")
                        .HasColumnType("int");

                    b.Property<bool>("Completado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("RecordatorioID");

                    b.HasIndex("ClienteID");

                    b.ToTable("Recordatorios");
                });

            modelBuilder.Entity("CarMaintanance.Model.Roles", b =>
                {
                    b.Property<int>("RolID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolID"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("RolID");

                    b.HasIndex("UsuarioID")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("CarMaintanance.Model.Solicitudes", b =>
                {
                    b.Property<int>("SolicitudID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SolicitudID"));

                    b.Property<int>("ClienteID")
                        .HasColumnType("int");

                    b.Property<bool>("Completada")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<int>("FacturasID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("SolicitudID");

                    b.HasIndex("ClienteID");

                    b.ToTable("Solicitudes");
                });

            modelBuilder.Entity("CarMaintanance.Model.SolicitudesHijas", b =>
                {
                    b.Property<int>("SolicitudHijaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SolicitudHijaID"));

                    b.Property<int>("AreaDetalleID")
                        .HasColumnType("int");

                    b.Property<bool>("Completada")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("Facturada")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<float>("Precio")
                        .HasColumnType("real");

                    b.Property<int>("SolicitudID")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("SolicitudHijaID");

                    b.HasIndex("AreaDetalleID");

                    b.HasIndex("SolicitudID");

                    b.ToTable("SolicitudesHijas");
                });

            modelBuilder.Entity("CarMaintanance.Model.Usuarios", b =>
                {
                    b.Property<int>("UsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioID"));

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.Property<int>("RolID")
                        .HasColumnType("int");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioID");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("CarMaintanance.Model.AreasDetalle", b =>
                {
                    b.HasOne("CarMaintanance.Model.Areas", "Area")
                        .WithMany("DetalleArea")
                        .HasForeignKey("AreaID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CarMaintanance.Model.Solicitudes", "Solicitud")
                        .WithMany("AreaDetalle")
                        .HasForeignKey("SolicitudID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Area");

                    b.Navigation("Solicitud");
                });

            modelBuilder.Entity("CarMaintanance.Model.Facturas", b =>
                {
                    b.HasOne("CarMaintanance.Model.Clientes", "Cliente")
                        .WithMany("DetalleFacturas")
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CarMaintanance.Model.Solicitudes", "Solicitud")
                        .WithOne("Factura")
                        .HasForeignKey("CarMaintanance.Model.Facturas", "SolicitudID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Solicitud");
                });

            modelBuilder.Entity("CarMaintanance.Model.Modulos", b =>
                {
                    b.HasOne("CarMaintanance.Model.Perfiles", "Perfil")
                        .WithMany("ModulosDetalle")
                        .HasForeignKey("PerfilID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("CarMaintanance.Model.Perfiles", b =>
                {
                    b.HasOne("CarMaintanance.Model.Areas", "Area")
                        .WithOne("Perfil")
                        .HasForeignKey("CarMaintanance.Model.Perfiles", "AreaID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Area");
                });

            modelBuilder.Entity("CarMaintanance.Model.PerfilesRoles", b =>
                {
                    b.HasOne("CarMaintanance.Model.Perfiles", "Perfil")
                        .WithMany("PefilesRoles")
                        .HasForeignKey("PerfilID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CarMaintanance.Model.Roles", "Rol")
                        .WithMany("PefilesRoles")
                        .HasForeignKey("RolID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Perfil");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("CarMaintanance.Model.Recordatorios", b =>
                {
                    b.HasOne("CarMaintanance.Model.Clientes", "Cliente")
                        .WithMany("RecordatorioList")
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("CarMaintanance.Model.Roles", b =>
                {
                    b.HasOne("CarMaintanance.Model.Usuarios", "Usuario")
                        .WithOne("Rol")
                        .HasForeignKey("CarMaintanance.Model.Roles", "UsuarioID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("CarMaintanance.Model.Solicitudes", b =>
                {
                    b.HasOne("CarMaintanance.Model.Clientes", "Cliente")
                        .WithMany("DetalleSolicitud")
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("CarMaintanance.Model.SolicitudesHijas", b =>
                {
                    b.HasOne("CarMaintanance.Model.AreasDetalle", "AreaDetalle")
                        .WithMany("DetalleHijas")
                        .HasForeignKey("AreaDetalleID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CarMaintanance.Model.Solicitudes", "Solicitud")
                        .WithMany("Detalle")
                        .HasForeignKey("SolicitudID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AreaDetalle");

                    b.Navigation("Solicitud");
                });

            modelBuilder.Entity("CarMaintanance.Model.Areas", b =>
                {
                    b.Navigation("DetalleArea");

                    b.Navigation("Perfil")
                        .IsRequired();
                });

            modelBuilder.Entity("CarMaintanance.Model.AreasDetalle", b =>
                {
                    b.Navigation("DetalleHijas");
                });

            modelBuilder.Entity("CarMaintanance.Model.Clientes", b =>
                {
                    b.Navigation("DetalleFacturas");

                    b.Navigation("DetalleSolicitud");

                    b.Navigation("RecordatorioList");
                });

            modelBuilder.Entity("CarMaintanance.Model.Perfiles", b =>
                {
                    b.Navigation("ModulosDetalle");

                    b.Navigation("PefilesRoles");
                });

            modelBuilder.Entity("CarMaintanance.Model.Roles", b =>
                {
                    b.Navigation("PefilesRoles");
                });

            modelBuilder.Entity("CarMaintanance.Model.Solicitudes", b =>
                {
                    b.Navigation("AreaDetalle");

                    b.Navigation("Detalle");

                    b.Navigation("Factura")
                        .IsRequired();
                });

            modelBuilder.Entity("CarMaintanance.Model.Usuarios", b =>
                {
                    b.Navigation("Rol")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
